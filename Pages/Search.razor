@page "/Search"
@using FileData
@using global::Models
@using Assignment.Models

<h3>View and search person</h3>

<div> Min age </div> <input type="text" oninput="value=value.replace(/[^\d]/g,'')" @bind-value="minAge"/>
<div> Max age </div> <input type="text" oninput="value=value.replace(/[^\d]/g,'')" @bind-value="maxAge">
<div> LastName </div> <input type="text" @bind-value="lastName">
<div> FirstName </div> <input type="text" @bind-value="firstName">
<div> Sex </div> <input type="text" @bind-value="sex">

<div>
    <button @onclick="search"> search </button>
    <button @onclick="clear"> clear </button>
</div>
<div><label> @message</label></div>

<TableTemplate Items="result">
    <TableHeader>
        <th>ID</th>
        <th>firstName</th>
        <th>lastName</th>
        <th>Age</th>
        <th>Sex</th>
        <th>Job</th>
        <th>HairColor</th>
        <th>EyeColor</th>
        <th>Height</th>
        <th>Weight</th>
    </TableHeader>
    <RowTemplate>
        <td>@context.id</td>
        <td>@context.firstName</td>
        <td>@context.lastName</td>
        <td>@context.age</td>
        <td>@context.sex</td>
        <td>@context.jobTitle</td>
        <td>@context.hairColor</td>
        <td>@context.eyeColor</td>
        <td>@context.height</td>
        <td>@context.weight</td>
    </RowTemplate>
</TableTemplate>


@code {
    private int minAge;
    private int maxAge;
    private string lastName;
    private string firstName;
    private string sex;
    List<Adult> result = new List<Adult>();
    private string message;
    private int count;
    
    public async Task search()
    {
        FileContext fileContext = new FileContext();
        IList<Adult> adults = fileContext.Adults;
        message = "";
        result.Clear();
        
        for (int i = 0; i < adults.Count; i++)
        {
            if (lastName ==null && firstName ==null)
            {
                if (adults[i].age >= minAge && adults[i].age <= maxAge && adults[i].sex == sex)
                {
                    Adult adult = adults[i];
                    result.Add(adult);
                }
            }
            else if (lastName == null)
            {
                if (adults[i].age >= minAge && adults[i].age <= maxAge && adults[i].sex == sex && adults[i].firstName==firstName)
                {
                    Adult adult = adults[i];
                    result.Add(adult);
                }
            }
            else if (firstName == null)
            {
                if (adults[i].age >= minAge && adults[i].age <= maxAge && adults[i].sex == sex && adults[i].lastName==lastName)
                {
                    Adult adult = adults[i];
                    result.Add(adult);
                }
            }
            else
            {
                if (adults[i].age >= minAge && adults[i].age <= maxAge && adults[i].sex == sex && adults[i].firstName==firstName && adults[i].lastName==lastName)
                {
                    Adult adult = adults[i];
                    result.Add(adult);
                }
            }
        }
        if (result.Count == 0)
        {
            message = "No match!";
        }
    }
    
    
    public async Task clear()
    {
        result.Clear();
        message = "";
    }

}